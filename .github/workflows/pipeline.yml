name: Terraform e Ansible CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform_ansible_k3s:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Terraform Init
        id: init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Terraform Apply
        id: apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: Obter IP da instância
        id: get_ip
        run: |
          cd terraform
          # Pega o valor do output e remove qualquer caractere especial
          INSTANCE_IP=$(terraform output -raw ec2_public_ip | tr -d '[:space:]' | tr -d '[:punct:]')
          echo "IP limpo: $INSTANCE_IP"
          echo "instance_ip=$INSTANCE_IP" >> $GITHUB_OUTPUT

      - name: Aguardar instância ficar disponível via SSH
        run: |
          IP="${{ steps.get_ip.outputs.instance_ip }}"
          echo "Aguardando SSH em $IP..."
          timeout 300 bash -c 'until nc -z $0 22; do sleep 2; done' $IP || exit 1

      - name: Criar inventário do Ansible
        run: |
          IP="${{ steps.get_ip.outputs.instance_ip }}"
          echo "[k3s_node]" > ansible_hosts
          echo "$IP ansible_user=ubuntu ansible_ssh_private_key_file=./key.pem" >> ansible_hosts
          cat ansible_hosts

      - name: Salvar chave SSH temporariamente
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Executar playbook do Ansible
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ steps.get_ip.outputs.instance_ip }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /github/workspace
            ansible-playbook -i ansible_hosts playbook.yml

      - name: Limpar chave SSH
        if: always()
        run: |
          rm -f key.pem