---
- name: Instalar e configurar k3s
  hosts: all
  become: yes
  vars:
    ansible_user: "ubuntu"
  tasks:
    - name: Esperar que a instância esteja pronta
      ansible.builtin.wait_for_connection:
        timeout: 300
        delay: 10

    - name: Atualizar pacotes do sistema
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist-upgrade
        cache_valid_time: 3600

    - name: Instalar dependências
      ansible.builtin.package:
        name:
          - curl
          - wget
          - tar
          - apt-transport-https
          - ca-certificates
          - software-properties-common
        state: present

    - name: Adicionar repositório do Docker (opcional para k3s)
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_os_family == "Debian"

    - name: Baixar o script de instalação do k3s
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/install-k3s.sh
        mode: '0755'
        timeout: 30

    - name: Instalar o k3s
      ansible.builtin.shell: |
        export INSTALL_K3S_SKIP_DOWNLOAD=true
        /tmp/install-k3s.sh
      args:
        creates: /usr/local/bin/k3s
      environment:
        INSTALL_K3S_SKIP_DOWNLOAD: "true"

    - name: Verificar status do k3s
      ansible.builtin.systemd:
        name: k3s
        state: started
        enabled: yes

    - name: Verificar instalação
      ansible.builtin.command: k3s --version
      register: k3s_version
      changed_when: false

    - name: Mostrar versão do k3s
      ansible.builtin.debug:
        msg: "K3s instalado: {{ k3s_version.stdout }}"

    - name: Configurar acesso ao kubeconfig
      ansible.builtin.copy:
        content: |
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
        dest: /etc/profile.d/k3s.sh
        mode: '0644'